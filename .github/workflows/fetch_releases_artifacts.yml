# This is a basic workflow to help you get started with Actions

name: Get releases artifacts

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  releases_download:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # List of repos
      - name: List of releases
        #run: gh release list --repo danou22/cmake_template 
        #run: gh release list --repo cpp-best-practices/cmake_template
        #run: gh release list --repo danou22/dn_pico-examples
        run: gh release list --repo dnoubibo/int-env
        env:
          GITHUB_TOKEN: ${{ github.token }}
      # Download repos artifacts
      - name: download releases artifacts
        #run: gh release download --repo danou22/cmake_template test_package
        #run: gh release download --repo cpp-best-practices/cmake_template test_package
        #un: gh release download --repo danou22/dn_pico-examples v0.1.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
      # Read download content
      - name: read downloaded artifacts
        run: ls

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
